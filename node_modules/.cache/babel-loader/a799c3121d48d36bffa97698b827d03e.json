{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Cards,Chart,CountryPicker}from'./components';import styles from'./App.module.css';import{fetchData,fetchCountryHotSpots}from'./api';import covid19Image from'./images/covid19_image2.png';import Button from'react-bootstrap/Button';import ButtonGroup from'react-bootstrap/ButtonGroup';import ToggleButton from'react-bootstrap/ToggleButton';import ToggleButtonGroup from'react-bootstrap/ToggleButtonGroup';// import MapDisplay from './components/MapDisplay/MapDisplay.js';\nimport tableau from'tableau-api';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:{},country:'',graphType:''// countryHotSpotPercents: {},\n};_this.handleCountryChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var fetchedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchData(country);case 2:fetchedData=_context.sent;console.log(fetchedData);// set the state\n_this.setState({data:fetchedData,graphType:\"barGraph\",country:country});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(App,[{key:\"componentDidMount\",// with componentDidMount, the async goes before it instead of after like usual functions\nvalue:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var fetchedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this.initViz();_context2.next=3;return fetchData();case 3:fetchedData=_context2.sent;// fetchData is an asyncronous function so it needs an await\nconsole.log(\"Fetched data \"+fetchedData);this.setState({data:fetchedData,graphType:\"barGraph\"});// let fetchedCountryHotSpots = new Map();\n// fetchedCountryHotSpots= await fetchCountryHotSpots();\n// console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n// this.setState({ countryHotSpotPercents: fetchedCountryHotSpots});\ncase 6:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"initViz\",value:function initViz(){console.log(\"Inside the VIZ INIT!!\");var vizUrl='https://public.tableau.com/shared/Y357XSK6K?:display_count=y&:origin=viz_share_link';var options={hideTabs:true,width:\"1000px\",height:\"800px\"};var vizContainer=this.vizContainer;var viz=new window.tableau.Viz(vizContainer,vizUrl,options);}},{key:\"handleGraphPickerL\",value:function handleGraphPickerL(){console.log(\"Clicked line button\");this.setState({graphType:\"lineGraph\"});}},{key:\"handleGraphPickerB\",value:function handleGraphPickerB(){console.log(\"Clicked bar button\");this.setState({graphType:\"barGraph\"});}// pickTopHotSpots() {\n//     console.log(\"Picking hot spots\");\n//     return Object.keys(this.countryHotSpotPercents).reduce((a, b) => this.countryHotSpotPercents[a] > this.countryHotSpotPercents[b] ? a : b);\n// }\n},{key:\"render\",value:function render(){var _this2=this;var message=\"Note: There is no daily data available for recovered cases.\";var _this$state=this.state,data=_this$state.data,country=_this$state.country,graphType=_this$state.graphType;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},/*#__PURE__*/React.createElement(\"img\",{className:styles.image,src:covid19Image,alt:\"COVID-19\"}),/*#__PURE__*/React.createElement(Cards,{data:data}),/*#__PURE__*/React.createElement(CountryPicker,{handleCountryChange:this.handleCountryChange}),/*#__PURE__*/React.createElement(ButtonGroup,{toggle:true,className:\"mb-2\"},/*#__PURE__*/React.createElement(Button,{variant:\"light\",size:\"sm\",active:true},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this2.handleGraphPickerL();}},\"Line Graph\")),/*#__PURE__*/React.createElement(Button,{variant:\"light\",size:\"sm\",active:true},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this2.handleGraphPickerB();}},\"Bar Graph\"))),/*#__PURE__*/React.createElement(Chart,{data:data,country:country,graphType:graphType}),/*#__PURE__*/React.createElement(\"a\",null,graphType==\"lineGraph\"?message:null),/*#__PURE__*/React.createElement(\"a\",{ref:function ref(div){_this2.vizContainer=div;}}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/covid19_visualization/src/App.js"],"names":["React","Cards","Chart","CountryPicker","styles","fetchData","fetchCountryHotSpots","covid19Image","Button","ButtonGroup","ToggleButton","ToggleButtonGroup","tableau","App","state","data","country","graphType","handleCountryChange","fetchedData","console","log","setState","initViz","vizUrl","options","hideTabs","width","height","vizContainer","viz","window","Viz","message","container","image","handleGraphPickerL","handleGraphPickerB","div","Component"],"mappings":"ugCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,aAAvB,KAA4C,cAA5C,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,SAAT,CAAoBC,oBAApB,KAAgD,OAAhD,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,mCAA9B,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,C,GAEMC,CAAAA,G,2TAEFC,K,CAAQ,CACJC,IAAI,CAAE,EADF,CAEJC,OAAO,CAAE,EAFL,CAGJC,SAAS,CAAE,EACX;AAJI,C,OA+BRC,mB,0FAAsB,iBAAOF,OAAP,wJAEQX,CAAAA,SAAS,CAACW,OAAD,CAFjB,QAEZG,WAFY,eAGlBC,OAAO,CAACC,GAAR,CAAYF,WAAZ,EACA;AACA,MAAKG,QAAL,CAAc,CAAEP,IAAI,CAAEI,WAAR,CAAqBF,SAAS,CAAE,UAAhC,CAA4CD,OAAO,CAAEA,OAArD,CAAd,EALkB,sD,wHAxBtB;wPAEI,KAAKO,OAAL,G,uBAC0BlB,CAAAA,SAAS,E,QAA7Bc,W,gBAAiC;AACvCC,OAAO,CAACC,GAAR,CAAY,gBAAkBF,WAA9B,EACA,KAAKG,QAAL,CAAc,CAAEP,IAAI,CAAEI,WAAR,CAAqBF,SAAS,CAAE,UAAhC,CAAd,EACA;AACA;AACA;AACA;mNAGM,CACNG,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACA,GAAMG,CAAAA,MAAM,CAAG,qFAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,CACZC,QAAQ,CAAE,IADE,CAEZC,KAAK,CAAE,QAFK,CAGZC,MAAM,CAAE,OAHI,CAAhB,CAKA,GAAMC,CAAAA,YAAY,CAAG,KAAKA,YAA1B,CACA,GAAIC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,MAAM,CAACnB,OAAP,CAAeoB,GAAnB,CAAuBH,YAAvB,CAAqCL,MAArC,CAA6CC,OAA7C,CAAV,CACD,C,+DAUkB,CACjBL,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,KAAKC,QAAL,CAAc,CACVL,SAAS,CAAE,WADD,CAAd,EAGH,C,+DAEoB,CACjBG,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,KAAKC,QAAL,CAAc,CACVL,SAAS,CAAE,UADD,CAAd,EAGH,CAED;AACA;AACA;AACA;uCAGS,iBACL,GAAIgB,CAAAA,OAAO,CAAG,6DAAd,CADK,gBAE+B,KAAKnB,KAFpC,CAEGC,IAFH,aAEGA,IAFH,CAESC,OAFT,aAESA,OAFT,CAEkBC,SAFlB,aAEkBA,SAFlB,CAGL,mBACI,2BAAK,SAAS,CAAEb,MAAM,CAAC8B,SAAvB,eACI,2BAAK,SAAS,CAAE9B,MAAM,CAAC+B,KAAvB,CAA8B,GAAG,CAAE5B,YAAnC,CAAiD,GAAG,CAAC,UAArD,EADJ,cAEI,oBAAC,KAAD,EAAO,IAAI,CAAIQ,IAAf,EAFJ,cAGI,oBAAC,aAAD,EAAe,mBAAmB,CAAE,KAAKG,mBAAzC,EAHJ,cAII,oBAAC,WAAD,EAAa,MAAM,KAAnB,CAAoB,SAAS,CAAC,MAA9B,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,IAAI,CAAC,IAA7B,CAAkC,MAAM,KAAxC,eACQ,yBAAG,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACkB,kBAAL,EAAN,EAAZ,eADR,CADJ,cAKI,oBAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,IAAI,CAAC,IAA7B,CAAkC,MAAM,KAAxC,eACQ,yBAAG,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,kBAAL,EAAN,EAAZ,cADR,CALJ,CAJJ,cAaI,oBAAC,KAAD,EAAO,IAAI,CAAItB,IAAf,CAAqB,OAAO,CAAIC,OAAhC,CAAyC,SAAS,CAAIC,SAAtD,EAbJ,cAcI,6BAAIA,SAAS,EAAE,WAAX,CAAyBgB,OAAzB,CAAmC,IAAvC,CAdJ,cAgBI,yBAAG,GAAG,CAAE,aAACK,GAAD,CAAS,CAAE,MAAI,CAACT,YAAL,CAAoBS,GAApB,CAAyB,CAA5C,EAhBJ,CADJ,CAoBH,C,iBApFatC,KAAK,CAACuC,S,EAuFxB,cAAe1B,CAAAA,GAAf","sourcesContent":["import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountryHotSpots } from './api';\nimport covid19Image from './images/covid19_image2.png';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n// import MapDisplay from './components/MapDisplay/MapDisplay.js';\nimport tableau from 'tableau-api';  \n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n        graphType: '',\n        // countryHotSpotPercents: {},\n    }\n\n    // with componentDidMount, the async goes before it instead of after like usual functions\n    async componentDidMount() {\n        this.initViz();\n        const fetchedData = await fetchData(); // fetchData is an asyncronous function so it needs an await\n        console.log(\"Fetched data \" + fetchedData);\n        this.setState({ data: fetchedData, graphType: \"barGraph\"});\n        // let fetchedCountryHotSpots = new Map();\n        // fetchedCountryHotSpots= await fetchCountryHotSpots();\n        // console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n        // this.setState({ countryHotSpotPercents: fetchedCountryHotSpots});\n    }\n\n    initViz() {  \n        console.log(\"Inside the VIZ INIT!!\");\n        const vizUrl = 'https://public.tableau.com/shared/Y357XSK6K?:display_count=y&:origin=viz_share_link';\n        const options = {\n            hideTabs: true,\n            width: \"1000px\",\n            height: \"800px\"\n        };\n        const vizContainer = this.vizContainer;  \n        let viz = new window.tableau.Viz(vizContainer, vizUrl, options); \n      } \n\n    handleCountryChange = async (country) => {\n        // get the data\n        const fetchedData = await fetchData(country);\n        console.log(fetchedData);\n        // set the state\n        this.setState({ data: fetchedData, graphType: \"barGraph\", country: country});\n    }\n\n    handleGraphPickerL() {\n        console.log(\"Clicked line button\");\n        this.setState({\n            graphType: \"lineGraph\"\n        })\n    }\n\n    handleGraphPickerB() {\n        console.log(\"Clicked bar button\");\n        this.setState({\n            graphType: \"barGraph\"\n        })\n    }\n\n    // pickTopHotSpots() {\n    //     console.log(\"Picking hot spots\");\n    //     return Object.keys(this.countryHotSpotPercents).reduce((a, b) => this.countryHotSpotPercents[a] > this.countryHotSpotPercents[b] ? a : b);\n    // }\n\n\n    render() {\n        let message = \"Note: There is no daily data available for recovered cases.\";\n        const { data, country, graphType} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={covid19Image} alt=\"COVID-19\"/>\n                <Cards data = {data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <ButtonGroup toggle className=\"mb-2\">\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerL()}>Line Graph</a>\n                            {/* <a> \"Note: There is no daily data available for recovered cases.\"</a> */}\n                        </Button>\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerB()}>Bar Graph</a>\n                    </Button>\n                </ButtonGroup>\n                <Chart data = {data} country = {country} graphType = {graphType}/>\n                <a>{graphType==\"lineGraph\" ? message : null}</a>\n                {/* <h1>{console.log(this.pickTopHotSpots())}</h1> */}\n                <a ref={(div) => { this.vizContainer = div }}></a>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}