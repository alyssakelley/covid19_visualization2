{"ast":null,"code":"var _jsxFileName = \"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/src/App.js\";\nimport React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountryHotSpots } from './api';\nimport covid19Image from './images/covid19_image2.png';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'; // import MapDisplay from './components/MapDisplay/MapDisplay.js';\n\nimport tableau from 'tableau-api';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      country: '',\n      graphType: '' // countryHotSpotPercents: {},\n\n    };\n\n    this.handleCountryChange = async country => {\n      // get the data\n      const fetchedData = await fetchData(country);\n      console.log(fetchedData); // set the state\n\n      this.setState({\n        data: fetchedData,\n        graphType: \"barGraph\",\n        country: country\n      });\n    };\n  }\n\n  // with componentDidMount, the async goes before it instead of after like usual functions\n  async componentDidMount() {\n    this.initViz();\n    const fetchedData = await fetchData(); // fetchData is an asyncronous function so it needs an await\n\n    console.log(\"Fetched data \" + fetchedData);\n    this.setState({\n      data: fetchedData,\n      graphType: \"barGraph\"\n    }); // let fetchedCountryHotSpots = new Map();\n    // fetchedCountryHotSpots= await fetchCountryHotSpots();\n    // console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n    // this.setState({ countryHotSpotPercents: fetchedCountryHotSpots});\n  }\n\n  initViz() {\n    console.log(\"Inside the VIZ INIT!!\");\n    const vizUrl = 'https://public.tableau.com/shared/Y357XSK6K?:display_count=y&:origin=viz_share_link';\n    const options = {\n      hideTabs: true,\n      width: \"1000px\",\n      height: \"800px\"\n    };\n    const vizContainer = this.vizContainer;\n    let viz = new window.tableau.Viz(vizContainer, vizUrl, options);\n  }\n\n  handleGraphPickerL() {\n    console.log(\"Clicked line button\");\n    this.setState({\n      graphType: \"lineGraph\"\n    });\n  }\n\n  handleGraphPickerB() {\n    console.log(\"Clicked bar button\");\n    this.setState({\n      graphType: \"barGraph\"\n    });\n  } // pickTopHotSpots() {\n  //     console.log(\"Picking hot spots\");\n  //     return Object.keys(this.countryHotSpotPercents).reduce((a, b) => this.countryHotSpotPercents[a] > this.countryHotSpotPercents[b] ? a : b);\n  // }\n\n\n  render() {\n    let message = \"Note: There is no daily data available for recovered cases.\";\n    const {\n      data,\n      country,\n      graphType\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.image,\n      src: covid19Image,\n      alt: \"COVID-19\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CountryPicker, {\n      handleCountryChange: this.handleCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      size: \"sm\",\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.handleGraphPickerL(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Line Graph\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      size: \"sm\",\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.handleGraphPickerB(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Bar Graph\"))), /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      country: country,\n      graphType: graphType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, graphType == \"lineGraph\" ? message : null), /*#__PURE__*/React.createElement(\"a\", {\n      ref: div => {\n        this.vizContainer = div;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/covid19_visualization/src/App.js"],"names":["React","Cards","Chart","CountryPicker","styles","fetchData","fetchCountryHotSpots","covid19Image","Button","ButtonGroup","ToggleButton","ToggleButtonGroup","tableau","App","Component","state","data","country","graphType","handleCountryChange","fetchedData","console","log","setState","componentDidMount","initViz","vizUrl","options","hideTabs","width","height","vizContainer","viz","window","Viz","handleGraphPickerL","handleGraphPickerB","render","message","container","image","div"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountryHotSpots } from './api';\nimport covid19Image from './images/covid19_image2.png';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n// import MapDisplay from './components/MapDisplay/MapDisplay.js';\nimport tableau from 'tableau-api';  \n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n        graphType: '',\n        // countryHotSpotPercents: {},\n    }\n\n    // with componentDidMount, the async goes before it instead of after like usual functions\n    async componentDidMount() {\n        this.initViz();\n        const fetchedData = await fetchData(); // fetchData is an asyncronous function so it needs an await\n        console.log(\"Fetched data \" + fetchedData);\n        this.setState({ data: fetchedData, graphType: \"barGraph\"});\n        // let fetchedCountryHotSpots = new Map();\n        // fetchedCountryHotSpots= await fetchCountryHotSpots();\n        // console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n        // this.setState({ countryHotSpotPercents: fetchedCountryHotSpots});\n    }\n\n    initViz() {  \n        console.log(\"Inside the VIZ INIT!!\");\n        const vizUrl = 'https://public.tableau.com/shared/Y357XSK6K?:display_count=y&:origin=viz_share_link';\n        const options = {\n            hideTabs: true,\n            width: \"1000px\",\n            height: \"800px\"\n        };\n        const vizContainer = this.vizContainer;  \n        let viz = new window.tableau.Viz(vizContainer, vizUrl, options); \n      } \n\n    handleCountryChange = async (country) => {\n        // get the data\n        const fetchedData = await fetchData(country);\n        console.log(fetchedData);\n        // set the state\n        this.setState({ data: fetchedData, graphType: \"barGraph\", country: country});\n    }\n\n    handleGraphPickerL() {\n        console.log(\"Clicked line button\");\n        this.setState({\n            graphType: \"lineGraph\"\n        })\n    }\n\n    handleGraphPickerB() {\n        console.log(\"Clicked bar button\");\n        this.setState({\n            graphType: \"barGraph\"\n        })\n    }\n\n    // pickTopHotSpots() {\n    //     console.log(\"Picking hot spots\");\n    //     return Object.keys(this.countryHotSpotPercents).reduce((a, b) => this.countryHotSpotPercents[a] > this.countryHotSpotPercents[b] ? a : b);\n    // }\n\n\n    render() {\n        let message = \"Note: There is no daily data available for recovered cases.\";\n        const { data, country, graphType} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={covid19Image} alt=\"COVID-19\"/>\n                <Cards data = {data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <ButtonGroup toggle className=\"mb-2\">\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerL()}>Line Graph</a>\n                            {/* <a> \"Note: There is no daily data available for recovered cases.\"</a> */}\n                        </Button>\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerB()}>Bar Graph</a>\n                    </Button>\n                </ButtonGroup>\n                <Chart data = {data} country = {country} graphType = {graphType}/>\n                <a>{graphType==\"lineGraph\" ? message : null}</a>\n                {/* <h1>{console.log(this.pickTopHotSpots())}</h1> */}\n                <a ref={(div) => { this.vizContainer = div }}></a>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}