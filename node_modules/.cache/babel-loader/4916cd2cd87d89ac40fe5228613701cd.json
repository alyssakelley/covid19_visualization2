{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/alyssakelley/Desktop/GitHub/covid19_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{NativeSelect,FormControl}from'@material-ui/core';import styles from'./CountryPicker.module.css';import{fetchCountries}from'../../api';var CountryPicker=function CountryPicker(_ref){var handleCountryChange=_ref.handleCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);// now this will only change when the setFetchedCountries changes and this allows the user to actually select a different country to view\nreturn/*#__PURE__*/React.createElement(FormControl,{className:styles.formControl},/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(event){return handleCountryChange(event.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),fetchedCountries.map(function(country,i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:country},country);})));};export default CountryPicker;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/covid19_visualization/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","event","target","value","map","country","i"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAAQC,YAAR,CAAsBC,WAAtB,KAAyC,mBAAzC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,cAAT,KAA+B,WAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,eAECP,QAAQ,CAAC,EAAD,CAFT,wCAExCQ,gBAFwC,eAEtBC,mBAFsB,eAI/CR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,QAAQ,2FAAG,+IACbD,mBADa,uBACcJ,CAAAA,cAAc,EAD5B,qHAAH,kBAARK,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKN,EALM,CAAT,CAKQ;AAER,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAEN,MAAM,CAACO,WAA/B,eACI,oBAAC,YAAD,EAAc,YAAY,CAAC,EAA3B,CAA8B,QAAQ,CAAE,kBAACC,KAAD,QAAWL,CAAAA,mBAAmB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9B,EAAxC,eACI,8BAAQ,KAAK,CAAC,EAAd,WADJ,CAEKN,gBAAgB,CAACO,GAAjB,CAAqB,SAACC,OAAD,CAAUC,CAAV,qBAAgB,8BAAQ,GAAG,CAAEA,CAAb,CAAgB,KAAK,CAAED,OAAvB,EAAiCA,OAAjC,CAAhB,EAArB,CAFL,CADJ,CADJ,CAQH,CAnBD,CAqBA,cAAeV,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ( {handleCountryChange} ) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setFetchedCountries( await fetchCountries());\n        }\n        fetchAPI();\n    }, []); // now this will only change when the setFetchedCountries changes and this allows the user to actually select a different country to view\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(event) => handleCountryChange(event.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}