{"ast":null,"code":"var _jsxFileName = \"/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }; // console.log(initialDailyData);\n\n\n    fetchAPI();\n  });\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {},\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Current state in ${country}'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, lineChart, barChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACH,KAFD,CADY,CAIZ;;;AACAS,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAAC,CAAD,CAAT,gBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFI,MAAAA,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EACR,CAAC;AACGT,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACU,SAA7B,CADT;AAEGC,QAAAA,KAAK,EAAE,UAFV;AAGGC,QAAAA,WAAW,EAAE,SAHhB;AAIGC,QAAAA,IAAI,EAAE;AAJT,OAAD,EAMA;AACIb,QAAAA,IAAI,EAAEE,SAAS,CAACK,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACc,MAA7B,CADV;AAEIH,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIG,QAAAA,eAAe,EAAE,qBAJrB;AAKIF,QAAAA,IAAI,EAAE;AALV,OANA;AAHE,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAqBQ,IAtBZ;AAyBA,QAAMG,QAAQ,GACVhB,IAAI,CAACU,SAAL,gBACI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAII,IAAA,OAAO,EAAE;AACLO,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAC;AAAtB;AAFF,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAUI,IAXR;AAcA,sBACI;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,SADL,EAEKW,QAFL,CADJ;AAMH,CAxDD;;AA0DA,eAAejB,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(initialDailyData);\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData[0] ? (\n            <Line \n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: \n                    [{\n                        data: dailyData.map((data) => data.confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, \n                    {\n                        data: dailyData.map((data) => data.deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5',\n                        fill: true,\n                    },\n                    ],\n                }}\n            />\n            ) : null\n    );\n\n    const barChart = (\n        data.confirmed ? (\n            <Bar \n                data={{\n\n                }}\n                options={{\n                    legend: { display: false},\n                    title: { display: true, text:'Current state in ${country}'},\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n            {barChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}