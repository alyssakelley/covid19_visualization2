{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api'; // link to the api\n\nexport const fetchData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(url); //console.log(response);\n    // creating a javascript object to hold all of the useful data from the api\n    // the api contains a lot of random data that does not have as revelant information\n    // so we pull out the most import pieces: confirmed, recovered, deaths, and when it \n    // was last updated. This could also be done when creating the data var as so:\n    // const { data: { confirmed, recovered, daths, lastUpdate} } = await axios.get(url);\n\n    const modifiedData = {\n      confirmed: data.confirmed,\n      recovered: data.recovered,\n      deaths: data.deaths,\n      lastUpdate: data.lastUpdate\n    };\n    return modifiedData;\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    console.log(data);\n    return data.map(({\n      confirmed,\n      deaths,\n      reportDate: date\n    }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date\n    }));\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/api/index.js"],"names":["axios","url","fetchData","data","get","modifiedData","confirmed","recovered","deaths","lastUpdate","error","fetchDailyData","console","log","map","reportDate","date","total"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,gCAAZ,C,CAA8C;;AAE9C,OAAO,MAAMC,SAAS,GAAG,YAAY;AACjC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,KAAK,CAACI,GAAN,CAAUH,GAAV,CAAvB,CADA,CAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,UAAMI,YAAY,GAAG;AACjBC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SADC;AAEjBC,MAAAA,SAAS,EAAEJ,IAAI,CAACI,SAFC;AAGjBC,MAAAA,MAAM,EAAEL,IAAI,CAACK,MAHI;AAIjBC,MAAAA,UAAU,EAAEN,IAAI,CAACM;AAJA,KAArB;AAMA,WAAOJ,YAAP;AACH,GAhBD,CAgBE,OAAMK,KAAN,EAAa;AACX,WAAOA,KAAP;AACH;AACJ,CApBM;AAsBP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,MAAI;AACA,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEH,GAAI,QAAjB,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,WAAOA,IAAI,CAACW,GAAL,CAAS,CAAC;AAAER,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBO,MAAAA,UAAU,EAAEC;AAAjC,KAAD,MAA8C;AAAEV,MAAAA,SAAS,EAAEA,SAAS,CAACW,KAAvB;AAA8BT,MAAAA,MAAM,EAAEA,MAAM,CAACS,KAA7C;AAAoDD,MAAAA;AAApD,KAA9C,CAAT,CAAP;AACH,GAJD,CAIE,OAAON,KAAP,EAAc;AACZ,WAAOA,KAAP;AACH;AACJ,CARM","sourcesContent":["import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api'; // link to the api\n\nexport const fetchData = async () => {\n    try {\n        const { data } = await axios.get(url);\n        //console.log(response);\n\n        // creating a javascript object to hold all of the useful data from the api\n        // the api contains a lot of random data that does not have as revelant information\n        // so we pull out the most import pieces: confirmed, recovered, deaths, and when it \n        // was last updated. This could also be done when creating the data var as so:\n        // const { data: { confirmed, recovered, daths, lastUpdate} } = await axios.get(url);\n        const modifiedData = {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate,\n        }\n        return modifiedData;\n    } catch(error) {\n        return error;\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        console.log(data);\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n}"]},"metadata":{},"sourceType":"module"}