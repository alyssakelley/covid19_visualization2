{"ast":null,"code":"var _jsxFileName = \"/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/App.js\";\nimport React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountryHotSpots } from './api';\nimport covid19Image from './images/covid19_image2.png';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'; // import MapDisplay from './components/MapDisplay/MapDisplay.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      country: '',\n      graphType: '',\n      countryHotSpotPercents: {}\n    };\n\n    this.handleCountryChange = async country => {\n      // get the data\n      const fetchedData = await fetchData(country);\n      console.log(fetchedData); // set the state\n\n      this.setState({\n        data: fetchedData,\n        graphType: \"barGraph\",\n        country: country\n      });\n    };\n  }\n\n  // with componentDidMount, the async goes before it instead of after like usual functions\n  async componentDidMount() {\n    const fetchedData = await fetchData(); // fetchData is an asyncronous function so it needs an await\n\n    console.log(\"Fetched data \" + fetchedData);\n    this.setState({\n      data: fetchedData,\n      graphType: \"barGraph\"\n    });\n    let fetchedCountryHotSpots = new Map();\n    fetchedCountryHotSpots = await fetchCountryHotSpots();\n    console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n    this.setState({\n      countryHotSpotPercents: fetchedCountryHotSpots\n    });\n  }\n\n  handleGraphPickerL() {\n    console.log(\"Clicked line button\");\n    this.setState({\n      graphType: \"lineGraph\"\n    });\n  }\n\n  handleGraphPickerB() {\n    console.log(\"Clicked bar button\");\n    this.setState({\n      graphType: \"barGraph\"\n    });\n  }\n\n  render() {\n    let message = \"Note: There is no daily data available for recovered cases.\";\n    const {\n      data,\n      country,\n      graphType\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: styles.image,\n      src: covid19Image,\n      alt: \"COVID-19\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Cards, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CountryPicker, {\n      handleCountryChange: this.handleCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      size: \"sm\",\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.handleGraphPickerL(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Line Graph\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      size: \"sm\",\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.handleGraphPickerB(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"Bar Graph\"))), /*#__PURE__*/React.createElement(Chart, {\n      data: data,\n      country: country,\n      graphType: graphType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, graphType == \"lineGraph\" ? message : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/App.js"],"names":["React","Cards","Chart","CountryPicker","styles","fetchData","fetchCountryHotSpots","covid19Image","Button","ButtonGroup","ToggleButton","ToggleButtonGroup","App","Component","state","data","country","graphType","countryHotSpotPercents","handleCountryChange","fetchedData","console","log","setState","componentDidMount","fetchedCountryHotSpots","Map","handleGraphPickerL","handleGraphPickerB","render","message","container","image"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData, fetchCountryHotSpots } from './api';\nimport covid19Image from './images/covid19_image2.png';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n// import MapDisplay from './components/MapDisplay/MapDisplay.js';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n        graphType: '',\n        countryHotSpotPercents: {},\n    }\n\n    // with componentDidMount, the async goes before it instead of after like usual functions\n    async componentDidMount() {\n        const fetchedData = await fetchData(); // fetchData is an asyncronous function so it needs an await\n        console.log(\"Fetched data \" + fetchedData);\n        this.setState({ data: fetchedData, graphType: \"barGraph\"});\n        let fetchedCountryHotSpots = new Map();\n        fetchedCountryHotSpots= await fetchCountryHotSpots();\n        console.log(\"Fetched country hot spots \" + fetchedCountryHotSpots);\n        this.setState({ countryHotSpotPercents: fetchedCountryHotSpots});\n    }\n\n    handleCountryChange = async (country) => {\n        // get the data\n        const fetchedData = await fetchData(country);\n        console.log(fetchedData);\n        // set the state\n        this.setState({ data: fetchedData, graphType: \"barGraph\", country: country});\n    }\n\n    handleGraphPickerL() {\n        console.log(\"Clicked line button\");\n        this.setState({\n            graphType: \"lineGraph\"\n        })\n    }\n\n    handleGraphPickerB() {\n        console.log(\"Clicked bar button\");\n        this.setState({\n            graphType: \"barGraph\"\n        })\n    }\n\n\n    render() {\n        let message = \"Note: There is no daily data available for recovered cases.\";\n        const { data, country, graphType} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={covid19Image} alt=\"COVID-19\"/>\n                <Cards data = {data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <ButtonGroup toggle className=\"mb-2\">\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerL()}>Line Graph</a>\n                            {/* <a> \"Note: There is no daily data available for recovered cases.\"</a> */}\n                        </Button>\n                    <Button variant=\"light\" size=\"sm\" active>\n                            <a onClick={() => this.handleGraphPickerB()}>Bar Graph</a>\n                    </Button>\n                </ButtonGroup>\n                <Chart data = {data} country = {country} graphType = {graphType}/>\n                {/* <h1>Here goes the map</h1> */}\n                <a>{graphType==\"lineGraph\" ? message : null}</a>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}