{"ast":null,"code":"import \"https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.js\"; // link to the api for the map visualization\n\nimport React from 'react';\nimport styles from 'https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.css';\n\nconst MapDisplay = () => {\n  // this will be your own token when you create your account with mapbox which can be done here: https://www.mapbox.com\n  const mapbox_token = \"pk.eyJ1IjoiYWx5c3Nha2VsbGV5OTciLCJhIjoiY2thYXBibndoMDR0ODJ5bzE4ZXloYmw1bSJ9.Rpz4n2W1YB4NBvCQJA3vew\";\n  mapboxgl.accessToken = mapbox_token;\n  var map = new mapboxgl.Map({\n    container: \"map\",\n    style: \"mapbox://styles/mapbox/dark-v10\",\n    zoom: 1.5,\n    center: [0, 20]\n  });\n\n  const getColorFromCount = count => {\n    if (count >= 100) {\n      return \"red\";\n    }\n\n    if (count >= 10) {\n      return \"blue\";\n    }\n\n    return \"gray\";\n  };\n\n  fetch(\"/get-latest.json\").then(response => response.json()).then(data => {\n    // const places = data.places;\n    // const reports = data.reports;\n    const {\n      places,\n      reports\n    } = data;\n    reports.filter(report => !report.hide).forEach(report => {\n      const {\n        infected,\n        placeId\n      } = report;\n      const currentPlace = places.find(place => place.id === placeId);\n      console.log(infected, currentPlace);\n      new mapboxgl.Marker({\n        color: getColorFromCount(infected)\n      }).setLngLat([currentPlace.longitude, currentPlace.latitude]).addTo(map);\n    });\n  });\n};\n\nexport default MapDisplay;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/MapDisplay/MapDisplay.js"],"names":["React","styles","MapDisplay","mapbox_token","mapboxgl","accessToken","map","Map","container","style","zoom","center","getColorFromCount","count","fetch","then","response","json","data","places","reports","filter","report","hide","forEach","infected","placeId","currentPlace","find","place","id","console","log","Marker","color","setLngLat","longitude","latitude","addTo"],"mappings":"AAAA,OAAO,yDAAP,C,CAAkE;;AAClE,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0DAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB;AACA,QAAMC,YAAY,GAClB,oGADA;AAGAC,EAAAA,QAAQ,CAACC,WAAT,GAAuBF,YAAvB;AAEA,MAAIG,GAAG,GAAG,IAAIF,QAAQ,CAACG,GAAb,CAAiB;AAC3BC,IAAAA,SAAS,EAAE,KADgB;AAE3BC,IAAAA,KAAK,EAAE,iCAFoB;AAG3BC,IAAAA,IAAI,EAAE,GAHqB;AAI3BC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ;AAJmB,GAAjB,CAAV;;AAOA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACnC,QAAIA,KAAK,IAAI,GAAb,EAAkB;AACd,aAAO,KAAP;AACH;;AACD,QAAIA,KAAK,IAAI,EAAb,EAAiB;AACb,aAAO,MAAP;AACH;;AACD,WAAO,MAAP;AACC,GARD;;AAUAC,EAAAA,KAAK,CAAC,kBAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV;AACA;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsBF,IAA5B;AAEAE,IAAAA,OAAO,CACNC,MADD,CACQC,MAAM,IAAI,CAACA,MAAM,CAACC,IAD1B,EAECC,OAFD,CAESF,MAAM,IAAI;AACf,YAAM;AAAEG,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAwBJ,MAA9B;AACA,YAAMK,YAAY,GAAGR,MAAM,CAACS,IAAP,CAAYC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaJ,OAAlC,CAArB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBE,YAAtB;AACA,UAAIvB,QAAQ,CAAC6B,MAAb,CAAoB;AACpBC,QAAAA,KAAK,EAAEtB,iBAAiB,CAACa,QAAD;AADJ,OAApB,EAGCU,SAHD,CAGW,CAACR,YAAY,CAACS,SAAd,EAAyBT,YAAY,CAACU,QAAtC,CAHX,EAICC,KAJD,CAIOhC,GAJP;AAKH,KAXD;AAYH,GAnBD;AAoBH,CA7CD;;AA8CA,eAAeJ,UAAf","sourcesContent":["import \"https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.js\"; // link to the api for the map visualization\nimport React from 'react';\nimport styles from 'https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.css';\n\nconst MapDisplay = () => {\n\n    // this will be your own token when you create your account with mapbox which can be done here: https://www.mapbox.com\n    const mapbox_token =\n    \"pk.eyJ1IjoiYWx5c3Nha2VsbGV5OTciLCJhIjoiY2thYXBibndoMDR0ODJ5bzE4ZXloYmw1bSJ9.Rpz4n2W1YB4NBvCQJA3vew\";\n\n    mapboxgl.accessToken = mapbox_token;\n\n    var map = new mapboxgl.Map({\n    container: \"map\",\n    style: \"mapbox://styles/mapbox/dark-v10\",\n    zoom: 1.5,\n    center: [0, 20]\n    });\n\n    const getColorFromCount = count => {\n    if (count >= 100) {\n        return \"red\";\n    }\n    if (count >= 10) {\n        return \"blue\";\n    }\n    return \"gray\";\n    };\n\n    fetch(\"/get-latest.json\")\n    .then(response => response.json())\n    .then(data => {\n        // const places = data.places;\n        // const reports = data.reports;\n        const { places, reports } = data;\n\n        reports\n        .filter(report => !report.hide)\n        .forEach(report => {\n            const { infected, placeId } = report;\n            const currentPlace = places.find(place => place.id === placeId);\n            console.log(infected, currentPlace);\n            new mapboxgl.Marker({\n            color: getColorFromCount(infected)\n            })\n            .setLngLat([currentPlace.longitude, currentPlace.latitude])\n            .addTo(map);\n        });\n    });\n}\nexport default MapDisplay;"]},"metadata":{},"sourceType":"module"}