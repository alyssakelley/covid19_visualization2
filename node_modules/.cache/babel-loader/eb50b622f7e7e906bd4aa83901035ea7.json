{"ast":null,"code":"var _jsxFileName = \"/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const initialDailyData = await fetchDailyData(); // return is a promise\n\n      setDailyData(initialDailyData);\n    }; // console.log(initialDailyData);\n\n\n    fetchAPI();\n  }, []);\n  const lineChart = // dailyData[0] ? (\n  dailyData.length !== 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        data\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","dailyData","setDailyData","fetchAPI","initialDailyData","lineChart","length","labels","map","data","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzB,YAAMC,gBAAgB,GAAG,MAAMR,cAAc,EAA7C,CADyB,CACwB;;AACjDM,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACH,KAHD,CADY,CAMZ;;;AAEAD,IAAAA,QAAQ;AACX,GATQ,EASN,EATM,CAAT;AAWA,QAAME,SAAS,GACX;AACIJ,EAAAA,SAAS,CAACK,MAAV,KAAqB,CAArB,gBACI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAaC,IAA3B,CADN;AAEFC,MAAAA,QAAQ,EACR,CAAC;AACGF,QAAAA,IAAI,EAAER,SAAS,CAACO,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACG,SAA7B,CADT;AAEGC,QAAAA,KAAK,EAAE,UAFV;AAGGC,QAAAA,WAAW,EAAE,SAHhB;AAIGC,QAAAA,IAAI,EAAE;AAJT,OAAD,EAMA;AACIN,QAAAA,IAAI,EAAER,SAAS,CAACO,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACO,MAA7B,CADV;AAEIH,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIG,QAAAA,eAAe,EAAE,qBAJrB;AAKIF,QAAAA,IAAI,EAAE;AALV,OANA;AAHE,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAqBI,IAvBZ;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,SADL,CADJ;AAKH,CA5CD;;AA8CA,eAAeL,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Charts = () => {\n    const [dailyData, setDailyData] = useState({});\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const initialDailyData = await fetchDailyData(); // return is a promise\n            setDailyData(initialDailyData);\n        }\n\n        // console.log(initialDailyData);\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        // dailyData[0] ? (\n            dailyData.length !== 0\n            ? ( <Line \n                data={{\n                    labels: dailyData.map(({data }) => date),\n                    datasets: \n                    [{\n                        data: dailyData.map((data) => data.confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, \n                    {\n                        data: dailyData.map((data) => data.deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5',\n                        fill: true,\n                    },\n                    ],\n                }}\n            />\n            ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}