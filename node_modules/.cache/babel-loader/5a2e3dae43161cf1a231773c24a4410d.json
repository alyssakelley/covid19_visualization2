{"ast":null,"code":"var _jsxFileName = \"/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const dailyData = await fetchDailyData(); // return is a promise\n\n      setDailyData(dailyData);\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  }, [dailyData]);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData(({\n          deaths\n        }) => deaths),\n        label: 'Infected',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/alyssakelley/Desktop/GitHub/javascript_react/covid19_visualization/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","dailyData","setDailyData","fetchAPI","console","log","lineChart","labels","date","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzB,YAAMF,SAAS,GAAG,MAAML,cAAc,EAAtC,CADyB,CACiB;;AAC1CM,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACH,KAHD;;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GATQ,EASN,CAACF,SAAD,CATM,CAAT;AAWA,QAAMK,SAAS,GACXL,SAAS,CAAC,CAAD,CAAT,gBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFM,MAAAA,MAAM,EAAEN,SAAS,CAAC,CAAC;AAAEO,QAAAA;AAAF,OAAD,KAAcA,IAAf,CADf;AAEFC,MAAAA,QAAQ,EACR,CAAC;AACGC,QAAAA,IAAI,EAAET,SAAS,CAAC,CAAC;AAAEU,UAAAA;AAAF,SAAD,KAAmBA,SAApB,CADlB;AAEGC,QAAAA,KAAK,EAAE,UAFV;AAGGC,QAAAA,WAAW,EAAE,SAHhB;AAIGC,QAAAA,IAAI,EAAE;AAJT,OAAD,EAMA;AACIJ,QAAAA,IAAI,EAAET,SAAS,CAAC,CAAC;AAAEc,UAAAA;AAAF,SAAD,KAAgBA,MAAjB,CADnB;AAEIH,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIG,QAAAA,eAAe,EAAE,qBAJrB;AAKIF,QAAAA,IAAI,EAAE;AALV,OANA;AAHE,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAmBU,IApBd;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAzCD;;AA2CA,eAAejB,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Charts = () => {\n    const [dailyData, setDailyData] = useState({});\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const dailyData = await fetchDailyData(); // return is a promise\n            setDailyData(dailyData);\n        }\n\n        console.log(dailyData);\n\n        fetchAPI();\n    }, [dailyData]);\n\n    const lineChart = (\n        dailyData[0] ? (\n            <Line \n                data={{\n                    labels: dailyData(({ date }) => date),\n                    datasets: \n                    [{\n                        data: dailyData(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, \n                    {\n                        data: dailyData(({ deaths }) => deaths),\n                        label: 'Infected',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5',\n                        fill: true,\n                    }],\n                }}\n            />) : null\n    );\n\n    return (\n        <div className={styles.container}>\n\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}